<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>钠离子电池综述</title>
    <link href="/2023/08/20/%E9%92%A0%E7%A6%BB%E5%AD%90%E7%94%B5%E6%B1%A0%E7%BB%BC%E8%BF%B0/"/>
    <url>/2023/08/20/%E9%92%A0%E7%A6%BB%E5%AD%90%E7%94%B5%E6%B1%A0%E7%BB%BC%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇文章源于《Recent Progress of Promising Cathode Candidates for Sodium-Ion Batteries: Current Issues, Strategy, Challenge, and Prospects》并适当精简</p><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>本篇文章主要介绍目前比较流行的SIB（sodium-ion batteries ）的最新进展，包括层状氧化物、聚阴离子材料和普鲁士蓝类似物。指出了目前这些阴极需要解决的问题，如能量密度不足、电子电导率低、空气敏感性等。本综述还详细介绍了这三种阴极候选材料的结构特征。</p><p>此外，还总结了近年来提高电化学性能的优化策略，包括元素掺杂、形貌修饰、结构体系等。</p><p>最后总结了这三种正极材料的研究现状并提出了未来的发展方向。本综述旨在为下一代SIB正极材料的开发提供实用指导。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>由于低成本和环保，钠离子电池（SIBs）是锂离子电池（LIBs）有希望的替代品。然而，它们的能量密度仍然不足，迫切需要改进。一个重要挑战是选择阴极材料。</p><p>迄今为止，已经合成并在研究文章中发布了许多系列的阴极材料，重点是优化钠离子电池的电化学性能：<strong>层状氧化物、多负离子化合物、普鲁士蓝类似物（PBAs）</strong>和有机材料，其中前三种类型受到了最大关注。其中，层状氧化物<strong>以其独特的层状结构和相对较高的能量密度</strong>而闻名，这显著促进了它们在能量存储系统中的广泛应用。聚阴离子化合物<strong>因其坚固的晶体结构</strong>而受到赞赏，在循环过程中提供了显著的稳定性，实现了优越的循环寿命。此外，它们表现出高热稳定性，有益于安全考虑。另一方面，普鲁士蓝类似物具有三维的晶体结构，具有<strong>大的间隙空间</strong>。这种特性使得离子快速扩散成为可能，从而促进了高速率性能，使得普鲁士蓝类似物特别适用于需要快速充放电循环的应用。</p><p>在此之后，总结了近年来作为阴极材料的这三种材料的优化策略，重点介绍了元素掺杂、表面涂层、结构设计以及合成方法，如图所示。最后，从电化学性能、成本和环境友好性等角度对这三种材料进行了比较。</p><p><img src="https://img.talk-qys.top/img/sstr202300150-fig-0001-m.webp" alt="sstr202300150-fig-0001-m"></p><h1 id="聚阴离子化合物的结构特征与当前问题"><a href="#聚阴离子化合物的结构特征与当前问题" class="headerlink" title="聚阴离子化合物的结构特征与当前问题"></a>聚阴离子化合物的结构特征与当前问题</h1><p>钠离子电池的阴极材料涵盖了许多家族，具有多样的结构，允许钠离子的插入/提取。理想的钠离子电池阴极材料应具备多种特性，如高能量密度，高输出电压，长寿命，优异的倍率性能，高化学和结构稳定性，高安全性，低成本等。</p><p>分层氧化物，多阴离子化合物以及普鲁士蓝类似物是最有前景的候选材料，在结构演变和当前挑战方面进行简要介绍。</p><h3 id="聚阴离子化合物的分类和结构特征"><a href="#聚阴离子化合物的分类和结构特征" class="headerlink" title="聚阴离子化合物的分类和结构特征"></a>聚阴离子化合物的分类和结构特征</h3><p>具有Na <em>x</em> M <em>y</em> (XO 4 ) <em>n</em> 分子式的聚阴离子阴极材料，具有高氧化还原电位和高热稳定性，但电导率较低。由于M和X的多样性，许多种类的聚阴离子材料已应用于钠离子电池。在本节中，我们主要将磷酸盐、焦磷酸盐、氟磷酸盐、硫酸盐和硅酸盐作为聚阴离子阴极材料的示例进行介绍。</p><p>源自LIBs中的LiFePO补偿材料，磷酸盐NaMPO（M=Fe，Mn）也表现出卓越的商业化潜力。其中，NaFePO展现出显著的商业潜力。具有正交晶体结构（空间群：Pnma）的NaFePO分为橄榄石和马瑞西特两个相（分别为相I和相II）。由于橄榄石结构中沿b轴存在Na离子扩散通道，由相邻的FeO单位和PO四面体连接而成（图3a，b），橄榄石状NaFePO作为SIBs正极材料具有极高的容量，因此备受期待。相反，马瑞西特相缺乏Na离子扩散通道，这是不期望的。因此，在高温下由橄榄石相向马瑞西特相的相变被认为是不理想的。为了解决这个问题，通常通过从LiFePO进行离子交换来合成橄榄石状NaFePO，而不是传统的化学反应。至于NaMnPO，它具有较高容量的优势。然而，锰溶解到电解质中的风险以及相应的Jahn-Teller效应限制了其发展，需要紧急优化。</p><p><img src="https://img.talk-qys.top/img/sstr202300150-fig-0003-m.webp" alt="sstr202300150-fig-0003-m"></p><p>与NaMPO的<strong>单一扩散通道</strong>相比，NASICON型（Na超离子导体）磷酸盐材料具有<strong>多个三维Na传输通道，可以实现更快的Na扩散。</strong>NASICON型磷酸盐材料的基本化学式为NaM(XO)2(M为V、Fe、Ni、Mn、Ti、Cr、Zr等，X为P、S、Si、Se、Mo等)。在过渡金属方面，NASICON型磷酸盐材料可分为单一过渡金属型和二元过渡金属型。在单一过渡金属型中，Na3V2(PO4)3（NVP）特别受到研究，具有优异的热稳定性、长寿命和低体积膨胀的优势。NVP的结构具有R3空间群。它由VO6八面体通过氧原子连接到三个PO4四面体，形成一个”灯笼”单元。在这个三维框架内，有Na1位点（六重配位）和Na2位点（八重配位）。Na1位点表现出更高的电化学活性，与Na2位点相比，在较高电压下从层间提取Na离子。此外，开放的三维框架为Na离子扩散提供了多条迁移路径。然而，孤立的金属八面体导致电子导电性较低。至于二元过渡金属型NaVMxM(PO4)3，它们的主要优势是通过部分取代NVP中的钒来降低成本和环境污染。此外，一些其他过渡金属元素如钛和锰也可以帮助提高容量并减少副反应.</p><p>焦磷酸盐是由磷酸盐在500-550°C的热分解过程中产生的。在这个过程中，一个氧原子丧失，导致了P2O单位的形成。因此，与磷酸盐相比，焦磷酸盐表现出更好的结构稳定性，尽管可能会牺牲一些特定的容量。焦磷酸盐总共有3种类型：Na4P2O7，钠双金属焦磷酸盐Na2MP2O7以及混合金属钠焦磷酸盐NaMP(PO3)4P2O7，分别对应。Na2MP2O7特别引人关注，类似于NVP，它由角连接的FeO八面体和PO四面体组成，并且还通过P多面体构建了3D Na离子扩散通道，方向分别为[100]、[110]和[011]。Na2MP2O7具有相对较高的工作电压，但容量较低，约为90毫安时/克。容量较低是由于不同情况下（Na1-Na8）的多次Na离子提取步骤和有序性引起的。</p><p>氟磷酸盐材料是通过将氟离子引入磷酸盐化合物中形成的。氟磷酸盐可分为三种，分别是NaVPO 4 F，Na 2 MPO 4 F和Na 3 (VO 1−<em>x</em> PO 4 ) 2 F 1+2<em>x</em> （0≤x≤1）。其中，钠钒氟磷酸盐家族引起了最多的关注。例如，NASICON型钠钒氟磷酸盐Na 3 V 2 (PO 4 ) 2 F 3 可以达到高达3.66-4.1 V的工作电压。Na 2 FePO 4 F和Na 2 CoPO 4 F也是有前途的钠离子电池候选正极材料，正在等待研究。</p><p>硫酸盐（Na 2 M（SO 4 ） 2 ·nH 2 O）因其更离子化的M-O键和SO 4 2− 的更强电负性而引起了全球关注。在各种不同的硫酸盐中，Na 2 Fe 2 （SO 4 ） 3 是最有前途的。在Na 2 Fe 2 （SO 4 ） 3 的结构中，存在一个由二聚体Fe 2 O 10 多面体和SO 4 单元组成的三维Na + 扩散通道。硅酸盐（Na 2 MSiO 4 ）也值得一提，因为它们由于强大的SiO键而以高结构稳定性而闻名。代表性的例子是Na 2 FeSiO 4 ，在充放电过程中可实现两电子转移，理论容量为276 mAh g −1 。</p><h3 id="聚阴离子化合物的当前问题"><a href="#聚阴离子化合物的当前问题" class="headerlink" title="聚阴离子化合物的当前问题"></a>聚阴离子化合物的当前问题</h3><p>聚阴离子型材料的阴极具有相对较高的氧化还原电位，这归因于高电负性聚阴离子基团的存在所引发的感应效应。然而，<strong>聚阴离子基团的颗粒尺寸较大、摩尔质量较高，以及本征电子导电性较差</strong>，最终降低了净电化学比容量，并进一步阻碍了其发展。</p><p>多阴离子化合物因缺乏直接电子共轭而具有固有的低电子导电性问题。尽管NASICON型磷酸盐具有多个快速的三维钠通道，但电子导电性仍然不理想。例如，在NASICON型NaV(PO )中，VO 八面体之间没有共用的氧原子，而在PO 四面体中是共用的，导致电子传输遵循V–O–P–O–V路径，而不是快速的V–O–V路径。因此，尽管具有高输出电压和稳定的结构，多阴离子化合物正面临着实现商业化的挑战，低导电性是急需解决的问题之一。</p><p>低电子导电性将进一步影响速率能力，从而降低比容量。众所周知，高比容量通常是通过多种离子的插入和提取实现的。然而，在多阴离子材料中，并非所有Na离子都能从框架中逸出，根据文献，仅约50%的Na离子可以逸出。此外，大分子量也抑制了比容量的提高，这表明多阴离子材料距离理论阴极材料还有一定距离。</p><h1 id="聚阴离子材料的优化策略"><a href="#聚阴离子材料的优化策略" class="headerlink" title="聚阴离子材料的优化策略"></a>聚阴离子材料的优化策略</h1><h3 id="元素掺杂"><a href="#元素掺杂" class="headerlink" title="元素掺杂"></a>元素掺杂</h3><h4 id="正离子掺杂"><a href="#正离子掺杂" class="headerlink" title="正离子掺杂"></a>正离子掺杂</h4><p>对于Na 3 V 2 (PO 4 ) 3 ，刘等人设计了一种Fe掺杂的Na 3 V 2 (PO 4 ) 3 @C (NVFP) 阴极。在这种材料中，通过部分取代V离子引入了Fe离子，因为它在Fe掺杂到V位点的形成能最小（图8b）。如图8c所示，Fe掺杂有效降低了带隙能量，从而促进了Na + 扩散动力学。此外，由于Fe和V之间的3d轨道具有不同的自旋构型，Fe掺杂还增强了VO和PO键的强度。此外，Fe掺杂可以催化包覆碳的石墨化，引入更多表面孔隙，从而扩大阴极与电解质之间的接触面积（图8a）。最终，NASICON型NVFP显示出优异的倍率性能，当放电倍率从0.1 C增加到20 C时，仅经历了21.26 mA h g −1 的容量衰减（表3）。Cr掺杂也被证明是改善电子导电性的有益方法。余等人通过使用V/Cr固溶体合成了Cr掺杂的Na 3 V 2 (PO 4 ) 3 (NVCP) 阴极，进一步嵌入了双碳网络（V 4 C 3 T <em>x</em> 和 V 3 CrC 3 T <em>x</em> Mxene）。NVCP@dual-carbon的结构示例如图8d所示。如图8e所示，Cr取代减轻了Na + /空位的排序，并形成了CrO 6 八面体，为Na + 在充放电过程中的迁移提供了更平滑的扩散路径。Cr取代促进了Na + 传递动力学，提高了2-3个数量级，比NVP高得多。因此，与NVP相比，NVCP在更宽的电压范围内显示出更高的比容量和更好的循环稳定性，其在200 C时的容量为78 mA g −1 （表3）。双金属取代同样适用于NVP，因为它在减少昂贵的钒消耗和改善电化学性能方面是有效的。陈等人 通过掺杂Co 2+ 和Cu 2+ 离子来优化Na 3 V 2 (PO 4 ) 3 ，从而调节Na+位点的占据和修改晶格参数，从而增强结构稳定性和长周期寿命。赵等人选择Fe和Ni元素部分取代Na 3 Fe 0.8 VNi 0.2 (PO 4 ) 3 (NFVNP)，值得一提的是，双金属掺杂有助于使V保持三价状态，并进一步使NFVNP在空气中具有高稳定性。此外，Ni取代对增加容量和降低R ct 有影响。因此，NFVNP在20 C时展现出惊人的功率密度为6500 W kg −1 ，在1400个循环后容量保持率为84.6%，79.3 mAh g −1<img src="https://img.talk-qys.top/img/sstr202300150-fig-0008-m.webp" alt="sstr202300150-fig-0008-m"></p><p>关于钒基氟磷酸盐Na 3 V 2 (PO 4 ) 2 F 3 (NVPF)，郭等人合成了一种以Zr掺杂的NVPF，其表面涂覆有N掺杂碳层。部分用Zr取代V对Na + 传输动力学产生积极影响，因为它具有更大的面间距。此外，N掺杂碳涂层有助于降低内部电阻。因此，NVPF-Zr-0.02/NC复合材料在0.5倍C下最终达到可逆容量为119.2毫安时/克 −1 ，库仑效率为78%，远高于NVPF。顾等人 在NVPF上首次采用高熵策略，通过微量Ca、Mg、Al、Cr、Mn元素掺杂形成Na 3 V 1.9 (Ca、Mg、Al、Cr、Mn) 0.1 (PO 4 ) 2 F 3 复合材料（HE-NVPF）。这种方法构建了稳健的三维开放通道框架，并通过掺杂离子的不同离子半径有效增加了晶胞参数。高熵元素的掺杂不仅通过降低Na + 迁移能量（图8h）显著提高了电子导电性，还增加了Na2位点的比例，以提高工作电压，从而抑制高电压下的复杂相变。如图8f、g所示，原始NVPF（p-NVPF）在充放电过程中发生相变，而HE-NVPF不发生相变。因此，HE-NVPF在20倍C下表现出了出色的电化学性能，能量密度为445瓦时/千克 −1 ，经过2000次循环后容量保持率为80.4%，超过了p-NVPF（图8i）。</p><p>除了对NVP和NVPF的研究外，最近还报道了对其他多阴离子材料的掺杂修改。例如，熊等人提出了一种镁掺杂的钠铁磷氧复合材料（NFPP/C）。镁掺杂增强了钠离子的扩散动力学并降低了内部电阻，最终在20 A/g的高倍率性能和5 A/g的超长循环寿命（表3）上展现出40毫安时/克和14,000个循环。刘等人合成了一种铝掺杂的钠钴磷氧（NCPP）正极，其中铝部分取代了钴元素，调节了结构并提高了离子导电性。值得一提的是，V存在于最流行的多阴离子材料中，虽然它有毒且成本高昂，但未来的研究努力预计能够有效减少V的消耗，并探索替代阳离子掺杂剂进行替代。</p><h4 id="负离子掺杂"><a href="#负离子掺杂" class="headerlink" title="负离子掺杂"></a>负离子掺杂</h4><p>阴离子掺杂是通过对多负离子正极施加强烈的感应效应来提高其电化学性能的另一种方法。这种方法导致了具有高工作平台电压的多负离子材料的发展。最近，一系列典型的阴离子掺杂多负离子材料已被研究用于锂离子电池。</p><p>王等合成了氯掺杂的NaV(PO)2F(NVPOClF)阴极，其中氯掺杂通过调节NVPOF晶格和V中心中的电子分布和密度，显著提高了材料的倍率性能和循环稳定性。总体而言，氯掺杂扩大了Na扩散空间，并降低了迁移能隙（图9a、b）。最终，NVPOClF在30倍率下实现了约63毫安时/克的优越倍率容量，并与NVPOF阴极相比表现出更好的循环性能（图9c、d）。作为一种高电负性元素，氟常被用作阴离子掺杂剂。邓等制备了一种碳包覆的氟掺杂NaTi(PO)4F(F-NTP@C)复合材料。合成路线及其基本结构见图9e。经过氟掺杂后，构建了CF和TiF键，改变了修饰的NTP结构（图9f）。如图9g所示，氟掺杂降低了能带隙，有助于Na传递动力学。因此，F-NTP@C材料在初库仑效率为94.8%的情况下实现了131.3毫安时/克的容量，并在0.5至50倍率范围内展现出优异的倍率性能，从123.5至108.7毫安时/克不等。胡等设计了溴掺杂的NaV(PO)3F/C复合材料，其中部分氟被溴取代。溴掺杂不仅减轻了氟的消耗，还减少了电荷局域化并增强了电子导电性。</p><p>此外，硅元素还可以作为掺杂剂应用于聚阴离子材料中，通过替代聚阴离子团中的磷元素。例如，Aragón等人合成了钠钒磷酸盐（NaVPO4）（SiO2）（0 ≤ x ≤ 0.5）作为钠离子电池的正极材料，在其中硅掺杂扩大了钠离子的扩散通道，从而使其相对于无硅样品表现出更好的倍率性能和循环稳定性。总的来说，值得注意的是，适当量的阴离子掺杂有助于优化电化学性能。</p><p>过量的掺杂会导致骨架结构的变化和容量的降解。因此，对掺杂水平的精确控制是实现所需电化学性能的必要条件。</p><p><img src="https://img.talk-qys.top/img/sstr202300150-fig-0009-m.webp" alt="sstr202300150-fig-0009-m"></p><h3 id="表面包覆"><a href="#表面包覆" class="headerlink" title="表面包覆"></a>表面包覆</h3><p>除了元素掺杂，表面涂层也是提高电子导电性和结构稳定性的改进方法之一。特别是在可变涂层材料中，碳是最有利的材料，这不仅因为碳可以作为涂层层，还因为它可以与多阴离子材料混合形成坚固的基质，比如碳纳米管，碳纤维，碳纳米片等。总体而言，碳修饰策略已被证明能够增强结构稳定性，阻止颗粒生长，并促进电子导电性。</p><p>在高等等的研究工作中，制备了一种具有介孔海绵状结构、被包覆在碳层和交联石墨烯纳米片（NFPP@C@rGO）中的钠铁磷酸铁（PO）（P O ）正极材料。双碳基质由碳包覆层和rGO纳米片形成的导电框架组成（图10a、b），不仅可以加速离子传输动力学，还可以抑制钠充放电过程中的体积变化。如图10c所示，在75%的钠提取后只有4.1%的体积变化。最终，在20 C下经历了一次独特的循环性能，容量保持率在10,000次循环后达到91.7%，远高于NFPP@C的26.8%（图10d）。马等人还设计了一种双碳层包覆策略，应用于磷酸钠钒（NMVP/C@C），该材料是通过溶胶-凝胶法合成的（图10e）。图10f-i显示了NMVP/C和NMVP/C@C的TEM和HRTEM图像，突显出这两种正极材料的独特微观形态。在NMVP/C@C的表面，不仅有类似于NMVP/C的无定形单个碳层，还有一个碳膜碳层。作为导电网络，双碳层不仅在提高电子导电性方面起关键作用，还可以保护正极材料免受腐蚀，避免电子极化。</p><p>因此，NMVP/C@C相对于NMVP/C限制了极化和电压平台衰减。如图10j、k所示，电压平台和氧化还原峰值得到了很好的保持，而NMVP/C显示出较差的结构稳定性和容量。NMVP/C@C在1000个循环中展现出优异的电化学性能，其容量为80.7毫安时/克，5倍倍率下的容量保持率为85.4%，远高于NMVP/C的45.9%（图10l）。类似地，由碳层和碳纳米片组成的双碳基质可以赋予长周期稳定性。此外，Pandit等人提出了一种固相法合成的碳包覆NaV(PO4)3(NVP-C)阴极，具有核壳结构，显示出0.1倍倍率下104毫安时/克的容量以及经过3500个循环后首个循环容量保持率达99.9%的非凡性能。此外，装配的Pb//NVP-C全电池在0.1倍倍率下展现出233毫安时/克的良好可逆容量。这一设计为铅酸电池的循环利用提供了新的见解。</p><p>一种由碳和金属氧化物复合而成的材料也可以作为涂层材料，协同增强电子导电性。王等人合成了一种Ce掺杂的NMVP@CeO/C阴极材料，其表面涂覆有CeO 2 /C复合材料。由于较大的Ce离子，钠的扩散通道被扩大，钠的插入/提取体积变化的趋势减弱。此外，CeO 2 /C涂层充当保护层，防止阴极腐蚀，并有助于优异的循环性能和NMVP@CeO + /C的电子导电性。</p><h3 id="结构体系"><a href="#结构体系" class="headerlink" title="结构体系"></a>结构体系</h3><p>结构体系是改善聚阴离子材料电化学性能的另一种有效方法。尽管聚阴离子材料具有3D开放框架和较高的工作电压，但往往容易出现容量衰减和循环性能差的问题，这阻碍了它们的商业化。改变微观结构是实现改善聚阴离子正极材料机械和电化学性能的研究热点。此外，将微观结构修饰与形态优化相结合，常常用于协同增强效果。一个方法是将聚阴离子粒子与碳材料混合，构建一个复杂的骨架。以下是一些目前关注聚阴离子阴极材料在结构和形态方面优化的研究。</p><h4 id="混合结构"><a href="#混合结构" class="headerlink" title="混合结构"></a>混合结构</h4><p>如前所述，尽管多阴离子材料具有大的三维开放框架，但它们往往存在有限的电子导电性和低能量密度。仅具有空心和多孔结构的简单结构体系是无法实现所需电化学性能的。因此，涉及多重复杂结构体系的综合策略，以及碳杂化、包覆或元素掺杂，已在全球范围内引起了极大的关注。</p><p>最近，李等人提出了一种钠钒磷氟氧化物（Na 3 V 2 (PO 4 ) 2 F 2.5 O 0.5 ）复合材料（N-NVPFO）的巧妙的“内外”结合策略，应用于准固态电池。N-NVPFO采用溶剂热法制备，其花状结构由三维纳米片和N掺杂组成，显示出优越的倍率性能。如图11a、b所示，扫描电子显微镜图像表明交联纳米片形成大孔结构，可缩短Na + 扩散距离，并为化学反应提供更多活性位点。此外，N-NVPFO表面包裹有碳层，协同改善电子导电性。N-NVPFO复合材料中的N掺杂降低了能带间隙（图11c、d）并稳定了钒的价态，同时也导致了氧空位的生成。因此，N-NVPFO复合材料在10 C下达到了84 mAh/g的高倍率性能，并在5 C下经过2000次循环后保持86%的容量保持率（表3）。除了复杂的花状结构，刘等人还通过溶胶-凝胶法在NASICON型Na 3 MnTi(PO 4 ) 2.83 F 0.5 （NMTPF）复合材料上设计了分级多孔结构（图11g）。通过引入F − 来部分取代PO 4 3− ，可以通过其高电负性诱导效应来控制颗粒大小，从而形成多孔结构（图11e、f）。与纳米片类似，纳米颗粒也能有效缩短Na + 扩散距离，多孔结构通过扩大接触面积促进电解质渗透到阴极材料中。扰乱规则的长程晶体结构是增强电子导电性的另一种方法。耿等人合成了均匀的两相Na 3 V 2 (PO 4 ) 3 阴极（HNVP），它是Na 7 V 4 (P 2 O 7 ) 4 PO 4 （Na 7 VP）和Na 3 V 2 (PO 4 ) 3 （Na 3 VP）的混合物。在HNVP中，无定形相的一部分由纳米尺度的短程Na 3 VP和Na 7 VP组成，晶界生成为Na + 离子扩散提供了快速通道，因为在Na + 插入/脱嵌过程中减轻了内应力。这显著促进了Na + 离子传输动力学，因为更多的Na + 离子将从Na 3 VP组分中提取到两相结构的Na 7 VP中（图11h）。因此，HNVP//NTP全电池在10℃下提供了令人满意的61.84 mAh/g的倍率性能，以及在800个循环中保持94.48%的容量保持率（图11i、j）。这一策略还为未来其他复合材料的潜在应用提供了新的见解。</p><p><img src="https://img.talk-qys.top/img/sstr202300150-fig-0011-m.webp" alt="sstr202300150-fig-0011-m"></p><h4 id="结构与碳质基体的耦合"><a href="#结构与碳质基体的耦合" class="headerlink" title="结构与碳质基体的耦合"></a>结构与碳质基体的耦合</h4><p>经过确认，与碳质基体耦合的结构能够强化骨架并优化循环性能。最近，苏等人设计了一种Hierarchically Porous Carbon Skeleton的NVP@C复合物包覆的NaV(PO ) (NVP)纳米颗粒。NVP纳米颗粒被锚定在孔结构上，缩短了Na扩散距离，促进了电解质的渗透，并在Na插入/扩散过程中减轻了内部应力。因此，NVP@C展现出优越的倍率性能和循环稳定性。此外，与碳纳米管（CNTs）混合也是增强聚阴离子材料倍率性能的有效方法。高等人合成了一种NaFePO F/碳/多壁碳纳米管微球（NFPF@C@MCNTs）复合材料，其中微球结构有效减缓体积变化并增强离子扩散动力学。该复合材料在0.1 C下表现出可逆的118.4 mAh g比容量和700个循环后的97%容量保持率（表3）。纳米纤维通常由电纺技术构建，作为电极材料具有有益的优点，有助于离子传输、电解质/阴极相互作用等。胡等人合成了一种作为阴极直接使用的NaMnV(PO ) @C (F-NMVP@C)纤维膜，无需额外的加工步骤。由于纤维膜的制备，Na转移得到了极大地促进，形态稳定性得到了广泛增强。因此，F-NMVP@C在10 C下表现出优异的60.0 mAh g倍率容量，并在60个循环后以0.2 C的速率保持了99%的容量</p><h3 id="合成方法"><a href="#合成方法" class="headerlink" title="合成方法"></a>合成方法</h3><p>设计新型合成方法的发展，不仅有助于解决环境不友好问题，还在制备纳米结构多阴离子材料方面发挥作用，这些材料具有粒径、孔隙度等方面精确设计的参数。 近年来，已提出了一些改进的合成方法来克服这些挑战。</p><p>通过共沉淀反应，在氧化还原过程中在原位气泡上生成多壳NVOPF微球，作为中空结构形成的软模板。不需要额外的烧结、纳米化和碳涂层等操作，因此为制备多壳中空多阴离子微球提供了新颖的低成本方法。</p><p><img src="https://img.talk-qys.top/img/sstr202300150-fig-0012-m.webp" alt="sstr202300150-fig-0012-m"></p><p>通过共沉淀反应，在氧化还原过程中在原位气泡上生成多壳NVOPF微球，作为中空结构形成的软模板。不需要额外的烧结、纳米化和碳涂层等操作，因此为制备多壳中空多阴离子微球提供了新颖的低成本方法。</p><p>在优化合成策略以提升电化学性能方面，孙教授的团队 <a href="https://onlinelibrary.wiley.com/doi/full/10.1002/sstr.202300150#sstr202300150-bib-0168">168</a> 设计了一种一步微波辅助水热法来合成NVPF 1+2<em>x</em> ，提供了一种低成本且均匀的加热处理方式（图12f）。本研究探讨了适当的焙烧温度（500、600和700°C），并将氧化石墨烯（rGO）结构与NVPF 1+2<em>x</em> 相结合，以协同优化电子导电性。</p><p>此外，利用不同的煅烧温度来使用rGO结构，可以改变相组成以控制电化学性能，为加速离子传输动力学的合成策略提供新的见解。</p><p>简言之，新颖的合成策略在进一步发展多阴离子材料方面起着关键作用，特别是在降低成本、优化电化学性能以及促进其工业商业化方面。</p>]]></content>
    
    
    <categories>
      
      <category>电池</category>
      
    </categories>
    
    
    <tags>
      
      <tag>钠电池</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建自己的ChatGPT</title>
    <link href="/2023/04/02/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT/"/>
    <url>/2023/04/02/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>当今，自然语言处理（NLP）技术的快速发展已经为人工智能（AI）领域的许多应用带来了变革性的机遇。ChatGPT是一款基于OpenAI的自然语言处理技术，能够生成高质量的自然语言对话。它采用预训练技术和深度神经网络模型，不断地学习语言数据并生成更加生动、自然的对话内容。在写文案、编程、提问等相关领域非常出彩，本文将介绍如何自己在本地部署ChatGPT-Web，让你能够自己安心使用ChatGPT，本文为<strong>小白教程</strong>，力求每个零基础的人都能搭建属于自己的ChatGPT，让AI运用到生活中的各处去；</p><p>在此，特别鸣谢OpenAI开发的<a href="https://openai.com/">GPT模型</a>，帮助了我很多；还有开源项目<a href="https://github.com/Chanzhaoyu/chatgpt-web">ChatGPT-Web</a>，没有它就没有本文的部署教程！</p><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><p>在部署自己的ChatGPT之前，让我们先准备，我们部署需要准备什么？</p><ol><li>Linux主机（Windows主机）</li><li>Docker操作（别担心，我会教你）</li><li>理解域名、IP和端口（Option选项，可理解可不理解）</li></ol><h3 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h3><p>部署ChatGPT的主机可以选择本地电脑，也可以选择服务器（所谓的服务器，粗略理解，就是一台在别的地方一直开机的电脑）。在哪部署，取决于你的使用方式，如果你只想在本地使用，可以选择在<strong>本地电脑</strong>中部署；如果想多端使用，在手机、电脑或分享给你的好友使用，那就最好部署在<strong>服务器</strong>中</p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>Docker是目前比较主流的部署应用方案。为什么要用Docker呢？原因有：</p><ol><li>通过使用Docker可以减少环境的配置（所谓的环境配置，例如你要运行一个java程序，你的计算机就必须安装java语言包；你要运行python程序，就必须安装python语言包），加快应用的部署速度</li><li>可以通过Docker来管理应用的开启与关闭</li></ol><h3 id="域名与端口（可选）"><a href="#域名与端口（可选）" class="headerlink" title="域名与端口（可选）"></a>域名与端口（可选）</h3><p>域名是用于标识和访问互联网上的网站和资源的一种字符串形式的地址。它是由一串字母、数字和连字符所组成的，能够识别和表示互联网上的计算机、服务和设备。域名的作用类似于一个门牌号码，它可以让用户在不需要记住复杂的IP地址的情况下直接访问同一个站点或服务。例如：baidu.com 对于的 ip 就是110.242.68.66</p><p>IP 是互联网协议的简称。它是一种通信规则，用于在互联网上传输数据。类似生活中的电话号码（小区地址），用于在互联网中找到你的计算机。</p><p>端口是一种用于指示进程或应用程序的通信端点的抽象概念。例如通过ip找到你的计算机了，那我怎么区分你的计算机上不同的服务呢？答案就是端口。例如你的计算机上面运行了A服务和B服务，那我可以通过<strong>你的计算机IP+A端口</strong>来访问A服务，通过<strong>计算机IP+B端口</strong>来运行B服务。</p><h3 id="正式部署教程"><a href="#正式部署教程" class="headerlink" title="正式部署教程"></a>正式部署教程</h3><p>在理解上述的概念后，正式开始我们的部署教程</p><h3 id="1、准备主机"><a href="#1、准备主机" class="headerlink" title="1、准备主机"></a>1、准备主机</h3><p><strong>若准备部署在本地</strong>，考虑到大多数的电脑都是Windows操作系统<del>or Linux操作系统</del>，第一步教程将讲解如何准备Docker环境</p><p>首先来到docker的<a href="https://www.docker.com/">官网</a>，点击之后下载Docker的软件包到你喜欢的路径，<strong>先别安装！</strong></p><p><img src="https://img.talk-qys.top/img/image-20230402175710107.webp" alt="image-20230402175710107"></p><p>Windows用户打开控制面板，进入到控制面板<img src="https://img.talk-qys.top/img/image-20230402175830607.webp" alt="image-20230402175830607" style="zoom: 67%;" /></p><p>通过启用功能，打开Hyper-V、适用于Linux的Windows子系统和虚拟机平台</p><p><img src="https://img.talk-qys.top/img/image-20230402175930670.webp" alt="image-20230402175930670"></p><p><img src="https://img.talk-qys.top/img/image-20230402175944285.webp" alt="image-20230402175944285"></p><p>在开启后，重启计算机，并可启用Windows Subsystem for Linux（WSL） Linux子系统</p><p>然后我们在 Microsoft Store 中下载新版 Ubuntu 镜像</p><img src="https://img.talk-qys.top/img/image-20230402180341382.webp" alt="image-20230402180341382" style="zoom: 67%;" /><p>在安装后输入以下命令，查看wsl的版本为1还是2</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl -<span class="hljs-literal">-list</span> <span class="hljs-literal">-v</span><br></code></pre></td></tr></table></figure><p><img src="https://img.talk-qys.top/img/image-20230402180520676.webp" alt="image-20230402180520676"></p><p>在确认自己的版本为2之后，即可开始安装docker</p><p>在安装完docker之后，打开docker的设置界面，确实自己启用的是wsl的后端即可</p><p><img src="https://img.talk-qys.top/img/image-20230403180947740.webp" alt="image-20230403180947740"></p><p><strong>若准备部署的云端</strong>，大部分的云端服务器的操作系统都是Linux操作系统，可以直接通过在阿里云中购买轻量应用服务器，来使用（默认安装好docker）</p><p>阿里云服务器购买链接（<a href="https://www.aliyun.com/product/swas">点我</a>），选择亚太地区，docker镜像，按照自己的经济实力选择配置<img src="https://img.talk-qys.top/img/image-20230403182701446.webp" alt="image-20230403182701446"></p><p>在购买完成后，应该能在控制台中的轻量应用服务器中看到自己的服务器<img src="https://img.talk-qys.top/img/image-20230404182206444.webp" alt="image-20230404182206444"></p><p>在服务器信息中看到自己的<strong>ip地址（公）（注意不要泄露出去）</strong>，点击重置密码，设置你个人喜欢的密码</p><p><img src="https://img.talk-qys.top/img/image-20230403183252680.webp" alt="image-20230403183252680"></p><p>在得到ip和你自己的密码后，我们将使用powershell来进行ssh连接到云服务器上</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ssh root<span class="hljs-selector-tag">@</span>&#123;你的服务器ip&#125;<br></code></pre></td></tr></table></figure><p>然后输入yes，再输入密码，注意密码是<strong>没有显示的</strong>，不要认为自己没有输入！ </p><p><img src="https://img.talk-qys.top/img/image-20230404181221327.webp" alt="image-20230404181221327"></p><p>在输入进入到终端，输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkdir chatgpt &amp;&amp; <span class="hljs-built_in">cd</span> chatgpt &amp;&amp; touch docker-compose.yml<br></code></pre></td></tr></table></figure><p>这是一行包含三个 Bash 命令的串联操作，用于创建一个名为 <code>chatgpt</code> 的新目录，并在其中创建一个名为 <code>docker-compose.yml</code> 的文件。 该命令可以按以下方式分解：</p><ul><li><code>mkdir chatgpt</code>: 创建一个名为 <code>chatgpt</code> 的新目录。 </li><li> <code>cd chatgpt</code>: 进入 <code>chatgpt</code> 目录。</li><li><code>touch docker-compose.yml</code>: 创建一个名为 <code>docker-compose.yml</code> 的空文件。</li></ul><p><img src="https://img.talk-qys.top/img/image-20230404174143397.webp" alt="image-20230404174143397"></p><p>输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano docker-compose.yml<br></code></pre></td></tr></table></figure><p>会出现以下界面</p><p><img src="https://img.talk-qys.top/img/image-20230404174501845.webp" alt="image-20230404174501845"></p><p>复制以下内容到里面</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">app:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">chenzhaoyu94/chatgpt-web</span> <span class="hljs-comment"># 总是使用 latest ,更新时重新 pull 该 tag 镜像即可</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">3002</span><span class="hljs-string">:3002</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">OPENAI_API_KEY:</span> &#123;<span class="hljs-string">你的token或者你的key</span>&#125;<br>      <span class="hljs-attr">OPENAI_API_BASE_URL:</span> &#123;<span class="hljs-string">你的token对于的api</span>&#125;<br>      <span class="hljs-attr">OPENAI_API_MODEL:</span> <span class="hljs-string">gpt-3.5-turbo-0301</span> <span class="hljs-comment">#聊天的模型</span><br>      <span class="hljs-attr">AUTH_SECRET_KEY:</span> &#123;<span class="hljs-string">password</span>&#125; <span class="hljs-comment">#密码，防止其他人乱用你的额度</span><br>      <span class="hljs-attr">TIMEOUT_MS:</span> <span class="hljs-number">60000</span><br></code></pre></td></tr></table></figure><p>通过快捷键<strong>CTRL+O</strong>进行保存，<strong>CTRL+X</strong>进行退出。</p><h3 id="2、购买API"><a href="#2、购买API" class="headerlink" title="2、购买API"></a>2、购买API</h3><p>key 和 api 的选择有3种方案：</p><ul><li>OpenAI 官方：需要自备国外信用卡（香港不行），且主机具备访问官方api的能力</li><li>API2D：Server酱作者推荐，有完整的文档，不需要主机具备访问官方api的能力，价格约为官方价格的1.5倍</li><li>第三方大佬Key：不太稳定，但胜在便宜量大</li></ul><p><strong>OpenAI官方：</strong></p><img src="https://img.talk-qys.top/img/image-20230404175050328.webp" alt="image-20230404175050328" style="zoom:67%;" /><p>自己创建secret key， 官方api的访问网址为：<a href="https://api.openai.com/">https://api.openai.com</a></p><p><strong>API2D</strong>：</p><p><img src="https://img.talk-qys.top/img/1680601973652.webp" alt="1680601973652"></p><p>通过创建自己的forward key， api2d的api访问网址为：<a href="https://stream.api2d.net/">https://stream.api2d.net</a></p><p>通过作者的推荐网址进行购买，<a href="https://api2d.com/r/186624">https://api2d.com/r/186624</a> , 作者可以获得奖励（写教程不易，希望大家可以通过这个链接购买，作者可以获得100p的奖励）</p><p><strong>第三方大佬Key：</strong><img src="https://img.talk-qys.top/img/image-20230404175737658.webp" alt="image-20230404175737658"></p><p>通过作者的推荐网址购买，<a href="https://fa.zhifenn.com/?i=98jfb2">https://fa.zhifenn.com/?i=98jfb2</a></p><p>作者可以获得奖励（写教程不易，希望大家可以通过这个链接购买，作者可以获得5w字的奖励）</p><p>第三方大佬的api访问网址为：<a href="https://chat-chatgpt-kmfviptdmu.us-west-1.fcapp.run/openai">https://chat-chatgpt-kmfviptdmu.us-west-1.fcapp.run/openai</a></p><p>将上述你购买得到的key和api访问网址，填入到docker-compose.yml的文件中，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><p>命令，即可运行成功！</p><p><img src="https://img.talk-qys.top/img/image-20230404180124711.webp" alt="image-20230404180124711"></p><h3 id="3、访问！"><a href="#3、访问！" class="headerlink" title="3、访问！"></a>3、访问！</h3><p>最后通过浏览器访问你的ip地址+3002端口即可！</p><p>本地部署访问的网址：<code>localhost:3002</code></p><p>服务器部署访问的网址：<code>&#123;你的服务器的公网IP:3002&#125;</code></p><p><img src="https://img.talk-qys.top/img/1680602666368.webp" alt="1680602666368"></p>]]></content>
    
    
    <categories>
      
      <category>Home-Lab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Home-Lab教程第一篇</title>
    <link href="/2023/01/13/Home-Lab%E6%95%99%E7%A8%8B%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <url>/2023/01/13/Home-Lab%E6%95%99%E7%A8%8B%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>最近的一年都在忙手头上的事情，很久都没有进行过有效的学习自己感兴趣的内容，包括各种programing 、stock 和 fund相关的东西了，今天打算写点东西讲解下自己1年前搭建的home-lab的教程，并用作纪念</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><h3 id="必要准备"><a href="#必要准备" class="headerlink" title="必要准备"></a>必要准备</h3><p>在搭建自己的home-lab（家庭服务器）之前，你得想清楚自己这么搭建是为了做什么？本人就是因为为了学习Linux而搭建的。原因有其下：</p><ol><li><p>阿里云的服务器费用对于学生来讲太贵了（接近200/年），且配置和网络带宽太低。在大二的时候，本人尝试自己编写java和vue.js的前后端分离的博客网站的时候，部署在阿里云的服务器上，结果体验非常不好，且需要自己搭配CDN来使用（又一笔消费）</p></li><li><p>大二、大三的时候对虚拟机的狂热，自己经常试着搭建各种虚拟机。因为逐渐认识到自己买来的电脑性能很多时候都不能完全用上，所以打算通过开虚拟机的途径来实现性能的利用率提高</p></li><li><p>通过对虚拟机的认识，加深自己对Linux的认识</p></li></ol><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>在入门home-lab之前，先弄懂自己搭建home-lab的主要用途是什么？计算型（主要用于跑程序）？存储型（NAS）？亦或者是图形计算型（GPU）？</p><p>本人选择的方向是计算型，因为我主要用来运行Linux操作系统和Docker等相关服务，主要用来作为一台类似云主机的功能，所以我的硬件选择方向是偏向于强的CPU、大内存</p><p><strong>CPU选择</strong></p><p>当时最火的cpu之间莫过于是AMD的5800x和INTEL的11代i7，在经过选择之后，本人选择AMD5800x，因为它的核心数更多，且制程相对更好，对多线程的操作会更好</p><p><strong>内存选择</strong></p><p>想跑多台虚拟机，一定需要大的内存，个人认为最好 &gt;= 16G内存，本人的Home-Lab服务器配置了32G内存，在目前开了相对足够的虚拟机之后，内存占用16G，swap分区吃了2G，相对盈余</p><p><img src="https://img.talk-qys.top/img/1673577620789.png"></p><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><p>选择虚拟机的操作系统上，当前主流的虚拟机宿主机操作系统主要有3家，分别为VMWARE ESXI、PROXMOX VE 和 UNRAID</p><p><img src="https://img.talk-qys.top/img/872610-20181221110758825-695653625.png" style="zoom:50%;" /><img src="https://img.talk-qys.top/img/proxmox-800x800.jpg" style="zoom:50%;" /><img src="https://img.talk-qys.top/img/v2-06b960f5a4518e9787609e3a10a617cd_1440w.png" style="zoom: 50%;" /></p><p>由于VMWARE对网卡的选择高和UNRAID的虚拟机性能相对不强，故本人选择使用PROXMOX VE（以下简称PVE）来作为宿主机的操作系统。</p><p>这里是pve的安装教程</p><p><a href="https://www.jianshu.com/p/c7636488b27a">Proxmox VE（PVE）安装教程 - 简书 (jianshu.com)</a></p><p>在pve的安装过程中，可能会涉及到Linux的文件系统的一个问题，如果是小白的话，一般选择EXT4的文件系统，下面列出Linux的常用的文件系统链接</p><p><a href="https://wiki.archlinuxcn.org/wiki/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">文件系统 - Arch Linux 中文维基 (archlinuxcn.org)</a></p><p>本人因为只有一块1T的SSD硬盘，所以为了能玩得到足够的虚拟机，所以选择使用BTRFS的文件系统，BTRFS能够进行文件压缩，能够自动进行硬盘的TRIM操作。</p><p>等安装完成后，等待下一篇的教程</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>本人好久没写了，所以文字可能不通顺，本周尽快鸽出第二篇！</p>]]></content>
    
    
    <categories>
      
      <category>Home-Lab</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年1月1日</title>
    <link href="/2022/01/01/2021%E5%B9%B41%E6%9C%881%E6%97%A5/"/>
    <url>/2022/01/01/2021%E5%B9%B41%E6%9C%881%E6%97%A5/</url>
    
    <content type="html"><![CDATA[<h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>首先，先2022年快乐！实话讲，我不相信今年会更好什么之类的话，因为时间是连续的，年份只是人类虚构出来用于统计的单位，2022年第一天和2021年最后一天，不会有任何本质的区别。</p>]]></content>
    
    
    <categories>
      
      <category>随便说说</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>21年10月份随便说说</title>
    <link href="/2021/10/10/21%E5%B9%B410%E6%9C%88%E8%BF%91%E6%9C%9F%E6%80%9D%E8%80%83/"/>
    <url>/2021/10/10/21%E5%B9%B410%E6%9C%88%E8%BF%91%E6%9C%9F%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>最近有点忙啊，各种烦心事席卷而来，看着别人辉煌，自己也很羡慕，随便写点东西发发牢骚算了~</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>近期感悟：还是不要容易听信别人大V所说的，要有自己的独立思考。我收回我上一篇的关于同时买入白酒和医疗的话，因为这两个板块往往经常涨跌，所以只需要买一个板块就好，近期可以看多一波白酒。等后面差不多卖一波再展示收益率</p>]]></content>
    
    
    <categories>
      
      <category>随便说说</category>
      
    </categories>
    
    
    <tags>
      
      <tag>股票</tag>
      
      <tag>基金</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于自己对最近的基金与股票的思考</title>
    <link href="/2021/09/12/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%AF%B9%E6%9C%80%E8%BF%91%E7%9A%84%E5%9F%BA%E9%87%91%E4%B8%8E%E8%82%A1%E7%A5%A8%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <url>/2021/09/12/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%AF%B9%E6%9C%80%E8%BF%91%E7%9A%84%E5%9F%BA%E9%87%91%E4%B8%8E%E8%82%A1%E7%A5%A8%E7%9A%84%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>最近A股市场行情变化多端，从开年的蓝筹暴跌=&gt;中期中概股腰斩=&gt;新能源势头崛起=&gt;顺周期股票快速拉升，让我们这些散户，是有一个热点追一个热点的玩。虽说盈利，但基本上吃不到肉。那么在接下来，我们该怎么做呢？</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>对于手上没有太多筹码的同学，我个人的卑微看法是，还是持有基金比较好。一、基金的买入成本相对较低（在万元买入以下）二、上车的成本也低（一些基金的最低买入金额最低为10元，约等于一顿饭钱）三、一般选购的基金都是优秀的基金经理替你打理，所以不大会出现类似“自己”操作股票出现的“追涨杀跌”的情况。</p><p>那么，我们该如何选择基金呢？在我的目前看来，我还是比较看好三个板块（虽然已经跌的妈都不认得了）。分别是新能源、白酒与医疗。有些人可能会说，最近白酒、医疗都在回调，白酒已经回调了差不多30个点了，你怎么还在推荐购买呢。我的观点是，买入比较好的蓝筹和龙头，经过时间的流逝，最终还是会盈利的。医疗也是同样的道理。而新能源，由于目前可能经历“第三次能源革命”，所以我们要把握住机会，享受时代的红利。但同时，也要注意自己的仓位是否过高，估值过高，不然短期的回调还是会让你肉痛的（我已经麻了）。</p><p>下面分别推荐我自己买入并持有的基金</p><p><img src="https://img.talk-qys.top/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912084446.png"></p><p><img src="https://img.talk-qys.top/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912084443.png"></p><p><img src="https://img.talk-qys.top/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912084439.png"></p><p><img src="https://img.talk-qys.top/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210912084426.png"></p><p>另外加推纳斯达克指数，美股科技，yyds。大家也可以看到我在白酒、医疗上彻底的“韭”了，这和我之前不懂得“落袋为安”有关。去年，19-20年，一整年的牛市，让我彻底的飘了，没有进行深刻的思考，认为买基金就是无脑梭哈，结果今年市场给我上了一堂课。</p><p>在基金的定投上，建议运用<a href="https://www.bilibili.com/video/BV1gQ4y1r71v?from=search&seid=9733568475127155899&spm_id_from=333.337.0.0">4%定投法</a>，这样可以兼顾收益与成本，但唯一的缺点就是要在三点前盯盘。</p><p>基金适合长期养，而股票适合短线操作（这是我自己认为的）。股票上，我还是比较推崇“趋势投资”，即市场喜欢什么，你就去买什么，本质上就是一个“击鼓传花”的游戏。但由于目前我还不是很深入股票（停留中玩玩的阶段），所以日后有新的感想，再来分享。</p><h2 id="后序："><a href="#后序：" class="headerlink" title="后序："></a>后序：</h2><p>虽然本次，只是分享了自己的“韭”建，但也是自己进入市场开始玩了一年的感悟。切记，不要拿自己的刚需钱，卖房钱去玩投资，不然带给你的影响是巨大的，最后用一张图来结束本篇博文。</p><p><img src="https://img.talk-qys.top/img/src=http___img5.duote.com_duoteimg_dtnew_techup_img_202102_20210225162423_16810.jpg&refer=http___img5.duote.jfif"></p>]]></content>
    
    
    <categories>
      
      <category>随便说说</category>
      
    </categories>
    
    
    <tags>
      
      <tag>股票</tag>
      
      <tag>基金</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期学习安排</title>
    <link href="/2021/09/10/%E8%BF%91%E6%9C%9F%E5%AD%A6%E4%B9%A0%E5%AE%89%E6%8E%92/"/>
    <url>/2021/09/10/%E8%BF%91%E6%9C%9F%E5%AD%A6%E4%B9%A0%E5%AE%89%E6%8E%92/</url>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>最近成懒狗了，不怎么想写文章，也不怎么想打代码，想当个混子（不是），哈哈，下面随便写点流水账记录下生活吧。</p><h2 id="回顾："><a href="#回顾：" class="headerlink" title="回顾："></a>回顾：</h2><p>最近自己一直在背诵教资科二的主观题（怎么这么多啊！！！！），截致现在为止，背诵到第四章，还有好多啊！仍需要努力，自己最近也对linux开始重拾兴趣，估计以后会发几篇关于linux的博客（挖坑ing），现在目前进展还算可以，学校没啥功课需要完成，尽自己最大的努力干教资吧，希望能够拿下，对得住自己的210块钱的报名费。</p><p>接下来，争取一周写一篇blog（趁我现在还有素材）！</p>]]></content>
    
    
    <categories>
      
      <category>随便说说</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>7月末8月学习计划</title>
    <link href="/2021/07/24/7%E6%9C%88%E6%9C%AB8%E6%9C%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <url>/2021/07/24/7%E6%9C%88%E6%9C%AB8%E6%9C%88%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>暑假也差不多过了一半了，又荒废了差不多半个7月了，对spring-cloud的学习也一知半解</p><h1 id="计划："><a href="#计划：" class="headerlink" title="计划："></a>计划：</h1><p>准备到大三，也差不多要想想自己的未来后路怎么走了，毕竟试错的时间还剩下一年。回想自己的2年，都在学自己喜欢的内容，但当面对真正自己的毕业去向时，还是有点陷入迷茫。</p><p>目前计划，在8月末前学习完教资科二科一，晚上利用空闲时间学习spring-cloud重新改写blog后端（不玩游戏了）。不过有一说一，教资科二的东西还是好多啊。学了头三节还这么多，</p><p><img src="https://img.talk-qys.top/img/4a879daeec5359a33040d1ed182cf8b.png"></p><p>整理资料的感觉还是真不错的，只不过有好多东西要背，真的难顶（对于我一个工科生来说）。希望10月底的考试能够对得起自己现在的努力。加油吧！</p>]]></content>
    
    
    <categories>
      
      <category>随便说说</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker部署文章</title>
    <link href="/2021/07/20/docker%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/"/>
    <url>/2021/07/20/docker%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>最近搞好搭好了博客的第一版，心里变想着想写一篇技术博客，用作自己该网站的第一篇技术文章。</p><h2 id="什么是docker？"><a href="#什么是docker？" class="headerlink" title="什么是docker？"></a>什么是docker？</h2><p>docker的定义相信网上都有很多种解释，其中说的最多的就是在简述docker是一种集装箱的思想。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code">+--------------------------+</span><br><span class="hljs-section">|       Applications       |</span><br><span class="hljs-section">+--------------------------+</span><br>|<span class="hljs-code">+------------------------+</span>|<br>||    Runtime Library     ||<br>|<span class="hljs-code">+------------------------+</span>|<br>||         Kernel         ||<br>|<span class="hljs-code">+------------------------+</span>|<br><span class="hljs-section">|     Operating System     |</span><br><span class="hljs-section">+-----+--------+-----------+</span><br><span class="hljs-section">| CPU | Memory | IO Device |</span><br><span class="hljs-section">+-----+--------+-----------+</span><br></code></pre></td></tr></table></figure><p>即把所有的有关软件，依赖库都打包一起，形成一个所谓的“集装箱”，在linux这艘“大船”上搭载，而对于我目前来说，我认为docker有点类似一个应用商店的概念，它能够将你所想要的”中间件”从docker hub中拉取下来，并部署在主机上。更有趣的是，它能够省略很多麻烦的事情，例如安装redis，rabbitmq等中间件，你需要自己编译redis或者安装erlang才能开始使用这些中间件，而现在通过一行命令即可部署.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">docker pull <span class="hljs-tag">&lt;<span class="hljs-name">target_package</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>docker原生支持linux，即它是based on linux的。而windows 和 macos 想要安装docker，则需要用到虚拟机机制，由于作者本人手中没有macos的机器，下面以windows的操作命令作为示范。</p><h2 id="windows安装docker"><a href="#windows安装docker" class="headerlink" title="windows安装docker"></a>windows安装docker</h2><p>首先，得确认你的系统不能是home（家庭版），否则你将不能开启hyper-v，进而不能开启wsl2。而docker在windows下的运行需要依赖wsl2，所以请确保你能安装之后，再去到docker官网安装docker—-&gt;<a href="https://www.docker.com/">docker官网</a></p><p>等待安装好之后，一般docker是安装在C盘上，所以我们需要将虚拟盘迁出c盘，放在你想安装的盘上。<br>打开powershell，输入wsl –list,得到计算机内安装的wsl系统，输入<code>wsl shutdown docker-desktop-data</code> 和<code>wsl shutdown docker-desktop</code> 然后输入<code>wsl export docker-desktop-data &lt;target_path/docker-desktop-data.tar.gz&gt;</code>和<code>wsl export docker-desktop &lt;target_path/docker-desktop.tar.gz&gt; </code></p><p>导出后，进行删除wsl中的镜像，最后<code>wsl import &lt;target/path/docker-desktop.tar.gz&gt;</code>和 <code>&lt;target/path/docker-desktop-data.tar.gz&gt;</code></p><p>当然有一种更取巧的方法，那就是软链接，具体软链接的命令，可以上网搜寻。</p><h2 id="docker安装redis"><a href="#docker安装redis" class="headerlink" title="docker安装redis"></a>docker安装redis</h2><p>我们以redis为例子，因为要想在windows上直接使用redis，是一件比较困难的事情，作者在这里选择使用docker来安装，因为是最省事。ok，话不多说，开始以下教程。</p><p>首先，使用<code>docker pull redis</code>命令来获取得到redis的镜像包，在这里说明一下，docker的容器与镜像的关系就好比，对象与类的关系。当你使用<code>docker run redis</code>的时候，可以近似地理解docker为你通过redis类创造出了redis对象，而你对redis对象的任何修改都不会涉及到redis类（这句话不完全对，以后的博客会说明）,docker使用命令-v 可以挂载宿主机的硬盘到容器内部，-p可以暴露端口号给容器，具体命令如下，<br><code>docker run -d -p 6379:6379 --name redis-msater --restart=always -v F:\redis\redis-data:/data -v F:\redis\redis.conf:/etc/redis/redis.conf redis redis-server /etc/redis/redis.conf </code><br>即暴露宿主机的F:\redis\redis-data，F:\redis\redis.conf 到容器内部，然后用命令redis以我的配置文件运行，那样就如同redis安装我们的机器上，但同时因为docker只挂载了2个目录，没有其他残余的文件产生，因此卸载也很方便，–restart=always 表明docker容器无论怎样，都会重新启动，实现开机自启动。</p>]]></content>
    
    
    <categories>
      
      <category>编程人生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
